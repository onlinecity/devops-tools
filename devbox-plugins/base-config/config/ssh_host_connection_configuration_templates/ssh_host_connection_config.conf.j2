# devbox plugin special: the below Ansible Jinja, requires Go Template escaping, because devbox runs everything through Go templating.
# devbox plugin code: https://github.com/jetify-com/devbox/blob/0.10.7/internal/plugin/plugin.go#L126
# However when this file is distributed, Go templating stripped off escaping and it becomes Jinja2 templating in the projects,
# obviously the final result is without Jinja2 when the file is used as ssh configuration.

# This file is generated by '{{"{{"}} script_file_name {{"}}"}}' based on output from Terraform in file '{{"{{"}} input_file_name {{"}}"}}' and templated with jinja2 template '{{"{{"}} template_file_name {{"}}"}}'

# Hostname this host is known as, that can be used with the ssh client like: ssh mpapiconverter-tst-certadmin-01
# Put anything on this line that we want to autocomplete with 'ssh ' + TAB + TAB
Host {{"{{"}} vm_name {{"}}"}} {{"{{"}} dns_hostname_without_platform_domain {{"}}"}}.{{"{{"}} platform_domain {{"}}"}} {{"{{"}} vm_ipv4_address {{"}}"}} {{"{{"}} vm_ipv6_address {{"}}"}}

# The address to connect to. We use the IPv4, as the hostname could be bad, if in an emergency, or during an incident or if DNS somehow is not working.
Hostname {{"{{"}} vm_ipv4_address {{"}}"}}

# This should be the full path on the local operator host, where the known_hosts file is located
UserKnownHostsFile {{"{{"}} knownhostfiles_path {{"}}"}}/{{"{{"}} vm_name {{"}}"}}.known_hosts

# Enable StrictHostKeyChecking, to make sure we only connect to a host, if we know the SSH host identity.
# The ssh client will exit with an error, if the identity is not already known.
StrictHostKeyChecking yes
